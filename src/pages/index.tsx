import Head from 'next/head'
import {Box, Button, Grid} from "@chakra-ui/react"
import Navbar from "@components/Navbar";
import FilterSection from "@components/FilterSection";
import ListApartment from "@components/ListApartment";
import {gql, useQuery} from "@apollo/client";
import client from "@lib/apolloClient";
import {$FIXME} from "@utils/constant";
import {NextPage} from "next";
import { useState} from "react";

interface HomeProps {
    apartments: $FIXME
}

const Home: NextPage<HomeProps> = (props) => {
    const {apartments} = props
    const [queryApartments, setQueryApartments] = useState(apartments || [])

    const getFilterData = async (query: {
        name: string,
        minPrice: number,
        maxPrice: number,
        minRoom: number,
        maxRoom: number,
        type: string
    }) => {
        const FilterQuery = gql`
            {
                findApartments(
                    minPrice:10
                    maxPrice: 20
                    minRoom:20
                    maxRoom:10
                    name:""
                    type:""
                ){
                    id
                    name
                    price
                    slots{
                        id
                        date
                    }
                }
            }
        `
        const {loading, data, error} = await client.query({
            query: FilterQuery
        })
        console.log({loading, data, error})
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <Navbar/>
            <Box
                position='relative'
                px="10rem"
                zIndex={1}
                marginTop={20}>
                <Grid
                    marginTop={7}
                    width='100%'
                    templateColumns="200px 1fr"
                    gap={5}
                >
                    <FilterSection getFilterData={getFilterData}/>
                    <ListApartment apartments={queryApartments}/>
                </Grid>
            </Box>
        </>
    )
}

export default Home

export async function getServerSideProps() {
    const fetchApartment = gql`
        {
            getApartments{
                name
                id
                description
                type
                price
                number_room
                slots{
                    id
                    date
                    booked
                }
            }
        }
    `
    const {data: {getApartments}} = await client.query({
        query: fetchApartment
    })

    return {
        props: {
            apartments: getApartments,
        }
    }
}
